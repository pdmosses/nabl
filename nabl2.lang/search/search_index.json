{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hyperlinked Twin","text":"<p>This website is a hyperlinked twin of a Spoofax language project code repository. The website navigation hierarchy corresponds to the repository file hierarchy, and the code displayed on each page is a verbatim copy of the raw code in the corresponding file.</p> <p>Hyperlinked twins support precise name-based code navigation online in ordinary web browsers:</p> <ul> <li>Simply click on a name reference to jump to the first declaration of the name.</li> <li>Click on a declaration to display a modal with links to all the references to the declaration.<sup>1</sup></li> </ul> <p>The sources of the webpages were generated using Spoofax from the analysed language project. The hyperlinks added to names were generated from the name binding analysis used by Spoofax, and the syntax highlighting corresponds closely to that displayed when browsing files in Spoofax.</p> <p>The aim is for a future release of Spoofax to support generation of hyperlinked twin websites with code in all Spoofax meta-languages.</p> <ol> <li> <p>When there is only one reference to a declaration, \u200b    clicking on the declaration jumps directly to the reference. \u200b    When there are no references to a declaration, \u200b    clicking on it has no effect.\u00a0\u21a9</p> </li> </ol>"},{"location":"nabl2.lang/","title":"NaBL2","text":"<p>The NaBL2 \u2018Name Binding Language\u2019 supports the specification of name binding and type checking rules of a language. NaBL2 uses a constraint-based approach, and uses scope graphs for name resolution.</p> <p>The NaBL2 documentation explains the details.</p> <p>NaBL2 is now deprecated. It has been superseded by Statix.</p> <p>However, NaBL2 is still used in Spoofax 2 for specifying the name binding of several meta-languages (e.g., Statix).</p>"},{"location":"nabl2.lang/#syntax","title":"Syntax","text":"<p><code>syntax/NaBL2Lang.sdf3</code></p> <p>The syntax of NaBL2 is specified in SDF3.</p>"},{"location":"nabl2.lang/#name-binding","title":"Name binding","text":"<p>The name binding of NaBL2 is not available.</p>"},{"location":"nabl2.lang/src-gen/syntax/permissive-water.sdf3/","title":"<code>permissive-water.sdf3</code>","text":"<pre><code>module permissive-water\n\n// Key idea: WATER is the inverse of LAYOUT\n\ncontext-free syntax\n  // Allow WATER on places where LAYOUT may occur\n  LAYOUT.WATER = WATER\n\nlexical sorts\n  WATER\n  WATERTOKEN\n  WATERTOKENSTART\n  WATERTOKENSEPARATOR\n\nlexical syntax\n  // Separate water regions into smaller chunks for recovery costs calculation\n  WATER = WATERTOKEN\n  WATER = WATERTOKENSEPARATOR\n\n  // Allow to skip over identifier strings\n  WATERTOKEN      = WATERTOKENSTART [A-Za-z0-9\\_]*\n  WATERTOKENSTART = [A-Za-z0-9\\_] {recover}\n\n  // Allow to skip over special characters that are neither part of identifiers nor whitespace characters\n  WATERTOKENSEPARATOR = ~[A-Za-z0-9\\_\\ \\t\\12\\r\\n\\*] {recover}\n\nlexical restrictions\n  WATERTOKEN -/- [A-Za-z0-9\\_]\n</code></pre> \u00d7"},{"location":"nabl2.lang/src-gen/syntax/permissive-water.sdf3/#modal-h2","title":"permissive-water.sdf3","text":""},{"location":"nabl2.lang/syntax/Layout.sdf3/","title":"<code>Layout.sdf3</code>","text":"<p> pdmosses/nabl/nabl2.lang/syntax/Layout.sdf3</p> <pre><code>module Layout\n\nlexical syntax\n\n  LAYOUT = [\\t\\ \\r\\n]\n  LAYOUT = LineComment\n  LAYOUT = BlockComment\n\n  EOF =  \n\n  LineComment     = \"//\" ~[\\r\\n]* ([\\r\\n] | EOF)\n\n  BlockComment    = \"/*\" CommentText (BlockComment CommentText)* (\"*/\" | EOF)\n  CommentText     = CommentChar*\n  CommentChar     = ~[\\*\\/] | CommentAsterisk | CommentSlash\n  CommentSlash    = \"/\"\n  CommentAsterisk = \"*\"\n\nlexical restrictions\n\n  EOF             -/- ~[]\n  CommentText     -/- ~[\\*\\/]\n  CommentAsterisk -/- [\\/]\n  CommentSlash    -/- [\\*]\n\ncontext-free restrictions\n\n  LAYOUT? -/- [\\ \\t\\r\\n]   // whitespace\n  LAYOUT? -/- [\\/].[\\/]    // line comment start\n  LAYOUT? -/- [\\/].[\\*]    // block comment start\n\n</code></pre> \u00d7"},{"location":"nabl2.lang/syntax/Layout.sdf3/#modal-h2","title":"Layout.sdf3","text":""},{"location":"nabl2.lang/syntax/NaBL2Lang.sdf3/","title":"<code>NaBL2Lang.sdf3</code>","text":"<p> pdmosses/nabl/nabl2.lang/syntax/NaBL2Lang.sdf3</p> <pre><code>module NaBL2Lang\n\nimports\n\n  nabl2/Lang\n  nabl2/lang/modules/Module // not transitively visible\n  Layout\n\ncontext-free start-symbols\n\n  NaBL2-Module\n\n</code></pre> \u00d7"},{"location":"nabl2.lang/syntax/NaBL2Lang.sdf3/#modal-h2","title":"NaBL2Lang.sdf3","text":""},{"location":"nabl2.lang/syntax/nabl2/Lang.sdf3/","title":"<code>Lang.sdf3</code>","text":"<p> pdmosses/nabl/nabl2.lang/syntax/nabl2/Lang.sdf3</p> <pre><code>module nabl2/Lang\n\nimports\n\n  nabl2/Shared\n  nabl2/lang/Main\n\n</code></pre> \u00d7"},{"location":"nabl2.lang/syntax/nabl2/Lang.sdf3/#modal-h2","title":"Lang.sdf3","text":""},{"location":"nabl2.lang/syntax/nabl2/lang/Main.sdf3/","title":"<code>Main.sdf3</code>","text":"<p> pdmosses/nabl/nabl2.lang/syntax/nabl2/lang/Main.sdf3</p> <pre><code>module nabl2/lang/Main\n\nimports\n\n  nabl2/lang/common/Main\n  nabl2/lang/modules/Module\n  nabl2/lang/rules/Rules\n  nabl2/lang/signatures/Signature\n\n\n</code></pre> \u00d7"},{"location":"nabl2.lang/syntax/nabl2/lang/Main.sdf3/#modal-h2","title":"Main.sdf3","text":""},{"location":"nabl2.lang/syntax/nabl2/lang/common/CTerms.sdf3/","title":"<code>CTerms.sdf3</code>","text":"<p> pdmosses/nabl/nabl2.lang/syntax/nabl2/lang/common/CTerms.sdf3</p> <pre><code>module nabl2/lang/common/CTerms\n\nimports\n\n  nabl2/shared/common/CTerms\n  nabl2/shared/common/Identifiers\n  nabl2/shared/common/ScopeGraph\n  nabl2/shared/common/Sets\n  nabl2/shared/constraints/Base\n  nabl2/lang/common/Terms\n\ntemplate options\n\n  keyword -/- [a-zA-Z0-9\\'\\_]\n\ncontext-free syntax\n\n  NaBL2-CVar.Var = NaBL2-VarId\n  NaBL2-CVar.Wld = &lt;_&gt;\n\nsyntax\n\n  NaBL2-CTerm-CF.Op    = NaBL2-OpId-LEX \"(\" LAYOUT?-CF NaBL2-CTerms-CF LAYOUT?-CF \")\"\n\ncontext-free syntax\n\n  NaBL2-CTerm.Tuple = &lt;(&lt;{NaBL2-CTerm \", \"}*&gt;)&gt;\n\n  NaBL2-CTerm       = NaBL2-IntTerm\n  NaBL2-CTerm       = NaBL2-StringTerm\n\n</code></pre> \u00d7"},{"location":"nabl2.lang/syntax/nabl2/lang/common/CTerms.sdf3/#modal-h2","title":"CTerms.sdf3","text":""},{"location":"nabl2.lang/syntax/nabl2/lang/common/Identifiers.sdf3/","title":"<code>Identifiers.sdf3</code>","text":"<p> pdmosses/nabl/nabl2.lang/syntax/nabl2/lang/common/Identifiers.sdf3</p> <pre><code>module nabl2/lang/common/Identifiers\n\nimports\n\n  nabl2/shared/common/Identifiers\n\nlexical syntax\n\n  NaBL2-RuleId = [a-zA-Z] [a-zA-Z0-9]*\n  NaBL2-RuleId = \"init\" | \"default\" {case-insensitive, reject}\n\nlexical restrictions\n\n  NaBL2-RuleId -/- [a-zA-Z0-9]\n\n</code></pre> \u00d7"},{"location":"nabl2.lang/syntax/nabl2/lang/common/Identifiers.sdf3/#modal-h2","title":"Identifiers.sdf3","text":""},{"location":"nabl2.lang/syntax/nabl2/lang/common/Injections.sdf3/","title":"<code>Injections.sdf3</code>","text":"<p> pdmosses/nabl/nabl2.lang/syntax/nabl2/lang/common/Injections.sdf3</p> <pre><code>module nabl2/lang/common/Injections\n\nimports\n\n  nabl2/shared/common/CTerms\n  nabl2/shared/common/Identifiers\n  nabl2/shared/common/Resolution\n  nabl2/shared/common/ScopeGraph\n  nabl2/shared/common/Sets\n  nabl2/shared/constraints/Base\n  nabl2/lang/common/Terms\n\ntemplate options\n\n  keyword -/- [a-zA-Z0-9\\'\\_]\n\ncontext-free syntax\n\n  NaBL2-Message.DefaultMessage =\n\n  NaBL2-MessagePosition.DefaultMessagePosition =\n  NaBL2-MessagePosition.MessagePositionFrom    = &lt; @ &lt;NaBL2-Var&gt;&gt;\n\n  NaBL2-OccurrenceIndex.DefaultOccurrenceIndex =\n  NaBL2-OccurrenceIndex.OccurrenceIndexFrom    = &lt; @ &lt;NaBL2-Var&gt;&gt;\n\n  NaBL2-LabelRE.Option    = &lt;&lt;NaBL2-LabelRE&gt;?&gt;\n  NaBL2-LabelRE.ConcatDot = &lt;&lt;NaBL2-LabelRE&gt;.&lt;NaBL2-LabelRE&gt;&gt;  {right,deprecated(\"The dot for concatenation is unnecessary, and can be omitted.\")}\n  NaBL2-LabelRE.NonEmpty = &lt;&lt;NaBL2-LabelRE&gt;+&gt;\n\n  NaBL2-ELabel.DefaultELabel = \"-\"\n  NaBL2-NLabel.DefaultNLabel = \"=\"\n\n  NaBL2-Constraint.CDeclType = [[NaBL2-Occurrence] : [NaBL2-CTerm] [NaBL2-ConstraintPriority] [NaBL2-Message]]\n\n  NaBL2-Constraint.CGen  = [[NaBL2-CTerm] genOf [NaBL2-CTerm] [NaBL2-Message]]\n  NaBL2-Constraint.CInst = [[NaBL2-CTerm] instOf [NaBL2-CTerm] [NaBL2-Message]]\n\nsyntax\n\n  NaBL2-TermIndex-CF.TermIndexFrom = \"@\" NaBL2-Var-CF\n\n  NaBL2-Constraint-CF.CSetEq = NaBL2-CSet-CF LAYOUT?-CF \"seteq\" NaBL2-SetProj-CF LAYOUT?-CF NaBL2-CSet-CF LAYOUT?-CF NaBL2-Message-CF\n\ncontext-free priorities\n\n    { NaBL2-LabelRE.Closure NaBL2-LabelRE.Option NaBL2-LabelRE.NonEmpty }\n  &gt; { right: NaBL2-LabelRE.Concat NaBL2-LabelRE.ConcatDot }\n  &gt; NaBL2-LabelRE.And\n  &gt; NaBL2-LabelRE.Or\n\nlexical syntax\n\n  NaBL2-Keyword = \"seteq\" | \"genOf\" | \"instOf\" | \"new\" | \"this\"\n\n</code></pre> \u00d7"},{"location":"nabl2.lang/syntax/nabl2/lang/common/Injections.sdf3/#modal-h2","title":"Injections.sdf3","text":""},{"location":"nabl2.lang/syntax/nabl2/lang/common/Main.sdf3/","title":"<code>Main.sdf3</code>","text":"<p> pdmosses/nabl/nabl2.lang/syntax/nabl2/lang/common/Main.sdf3</p> <pre><code>module nabl2/lang/common/Main\n\nimports\n\n  nabl2/lang/common/CTerms\n  nabl2/lang/common/Identifiers\n  nabl2/lang/common/Injections\n  nabl2/lang/common/Messages\n  nabl2/lang/common/Terms\n\n\n</code></pre> \u00d7"},{"location":"nabl2.lang/syntax/nabl2/lang/common/Main.sdf3/#modal-h2","title":"Main.sdf3","text":""},{"location":"nabl2.lang/syntax/nabl2/lang/common/Messages.sdf3/","title":"<code>Messages.sdf3</code>","text":"<p> pdmosses/nabl/nabl2.lang/syntax/nabl2/lang/common/Messages.sdf3</p> <pre><code>module nabl2/lang/common/Messages\n\nimports\n\n  nabl2/shared/common/CTerms\n  nabl2/lang/common/Terms\n\ntemplate options\n\n  keyword -/- [a-zA-Z0-9\\'\\_]\n\nsyntax\n\n  NaBL2-MessageContent-CF.Formatted = \"$[\" NaBL2-MessageContentPart-CF* \"]\"\n\ncontext-free syntax\n\n  NaBL2-MessageContent.Default  =\n  NaBL2-MessageContent          = NaBL2-StringTerm\n\n  NaBL2-MessageContentPart.Term = &lt;[&lt;NaBL2-CTerm&gt;]&gt;\n  NaBL2-MessageContentPart.Text = NaBL2-MessageChars\n\nlexical syntax\n\n  NaBL2-MessageChars = NaBL2-MessageChar+\n  NaBL2-MessageChar  = ~[\\[\\]\\\\\\t\\r\\n]\n  NaBL2-MessageChar  = \"\\\\[\" | \"\\\\]\" | \"\\\\\\\\\"\n\nlexical restrictions\n\n  NaBL2-MessageChars -/- ~[\\[\\]]\n\n</code></pre> \u00d7"},{"location":"nabl2.lang/syntax/nabl2/lang/common/Messages.sdf3/#modal-h2","title":"Messages.sdf3","text":""},{"location":"nabl2.lang/syntax/nabl2/lang/common/Terms.sdf3/","title":"<code>Terms.sdf3</code>","text":"<p> pdmosses/nabl/nabl2.lang/syntax/nabl2/lang/common/Terms.sdf3</p> <pre><code>module nabl2/lang/common/Terms\n\nimports\n\n  nabl2/shared/common/Identifiers\n\ntemplate options\n\n  keyword -/- [a-zA-Z0-9\\']\n\ncontext-free syntax\n\n  NaBL2-Var.Var   = NaBL2-VarId\n  NaBL2-Wld.Wld   = \"_\"\n\n  NaBL2-VarOrWld  = NaBL2-Var\n  NaBL2-VarOrWld  = NaBL2-Wld\n\n  NaBL2-Pattern          = NaBL2-VarOrWld\n  NaBL2-Pattern.List     = &lt;[&lt;{NaBL2-Pattern \", \"}*&gt;]&gt;\n  NaBL2-Pattern.ListTail = &lt;[&lt;{NaBL2-Pattern \", \"}*&gt;|&lt;NaBL2-Pattern&gt;]&gt;\n  NaBL2-Pattern.Tuple    = &lt;(&lt;{NaBL2-Pattern \", \"}*&gt;)&gt;\n  NaBL2-Pattern.As       = &lt;&lt;NaBL2-Var&gt;@&lt;NaBL2-Pattern&gt;&gt;\n  NaBL2-Pattern          = NaBL2-OpTerm\n  NaBL2-Pattern          = NaBL2-IntTerm\n  NaBL2-Pattern          = NaBL2-StringTerm\n\n  NaBL2-Patterns         = &lt;&lt;{NaBL2-Pattern \", \"}*&gt;&gt;\n\ncontext-free syntax\n\n  NaBL2-IntTerm.Int = NaBL2-INT\n\nsyntax\n\n  NaBL2-OpTerm-CF.Op      = NaBL2-OpId-LEX \"(\" LAYOUT?-CF NaBL2-Patterns-CF LAYOUT?-CF  \")\"\n\n  NaBL2-StringTerm-CF.Str = \"\\\"\" NaBL2-StringChars-LEX \"\\\"\"\n\nlexical syntax\n\n  NaBL2-StringChars   = NaBL2-StringChar*\n  NaBL2-StringChar    = ~[\\\"\\\\\\t\\r\\n]\n  NaBL2-StringChar    =  \"\\\\\\\"\" | \"\\\\\\\\\" | \"\\\\t\" | \"\\\\r\" | \"\\\\n\"\n\nlexical restrictions\n\n  NaBL2-StringChars -/- ~[\\\"]\n\n\n</code></pre> \u00d7"},{"location":"nabl2.lang/syntax/nabl2/lang/common/Terms.sdf3/#modal-h2","title":"Terms.sdf3","text":""},{"location":"nabl2.lang/syntax/nabl2/lang/modules/Module.sdf3/","title":"<code>Module.sdf3</code>","text":"<p> pdmosses/nabl/nabl2.lang/syntax/nabl2/lang/modules/Module.sdf3</p> <pre><code>module nabl2/lang/modules/Module\n\ntemplate options\n\n  keyword -/- [a-zA-Z0-9\\.\\-\\_]\n\ncontext-free syntax\n\n  NaBL2-Module.Module = &lt;\n    module &lt;NaBL2-ModuleId&gt;\n\n    &lt;{NaBL2-ModuleSection \"\\n\"}*&gt;\n  &gt;\n\n  NaBL2-ModuleSection.Imports = &lt;\n    imports &lt;NaBL2-ImportModule*&gt;\n  &gt;\n\n  NaBL2-ImportModule.Import = &lt;&lt;NaBL2-ModuleId&gt;&gt; \n\nsyntax\n\n  NaBL2-ImportModule-CF.ImportWildcard = NaBL2-ModuleId-CF \"/-\"\n\nlexical syntax\n\n  NaBL2-ModuleId = {NaBL2-ModuleIdPart \"/\"}+\n  NaBL2-ModuleIdPart = [a-zA-Z\\_] [a-zA-Z0-9\\.\\-\\_]*\n  NaBL2-ModuleId = NaBL2-SectionKeyword {reject}\n\n  NaBL2-RuleId = NaBL2-SectionKeyword {reject}\n\n  NaBL2-SectionKeyword = \"imports\"\n\nlexical restrictions\n\n  NaBL2-ModuleId -/- [a-zA-Z0-9\\.\\-\\_]\n\n\n</code></pre> \u00d7"},{"location":"nabl2.lang/syntax/nabl2/lang/modules/Module.sdf3/#modal-h2","title":"Module.sdf3","text":""},{"location":"nabl2.lang/syntax/nabl2/lang/rules/CGen.sdf3/","title":"<code>CGen.sdf3</code>","text":"<p> pdmosses/nabl/nabl2.lang/syntax/nabl2/lang/rules/CGen.sdf3</p> <pre><code>module nabl2/lang/rules/CGen\n\nimports\n\n  nabl2/shared/common/CTerms\n  nabl2/shared/common/Identifiers\n  nabl2/shared/constraints/Base\n\n  nabl2/lang/common/Identifiers\n  nabl2/lang/common/Injections\n  nabl2/lang/common/Terms\n  nabl2/lang/rules/Rules\n  nabl2/lang/rules/Names\n\n\ncontext-free syntax\n\n  NaBL2-Rule.CGenInitRuleNoConstraint = &lt;\n    init &lt;NaBL2-CGenParamsTerm&gt; &lt;NaBL2-CGenTypeTerm&gt;.\n  &gt;\n\n  NaBL2-Rule.CGenInitRule = &lt;\n    init &lt;NaBL2-CGenParamsTerm&gt; &lt;NaBL2-CGenTypeTerm&gt; :=\n        &lt;NaBL2-RuleBody&gt;.\n  &gt;\n\n  NaBL2-Rule.CGenRuleNoConstraint = &lt;\n    &lt;NaBL2-CGenRuleDef&gt; [[ &lt;NaBL2-Pattern&gt; &lt;NaBL2-CGenParamsPattern&gt; &lt;NaBL2-CGenTypePattern&gt; ]] .\n  &gt;\n\n  NaBL2-Rule.CGenRule = &lt;\n    &lt;NaBL2-CGenRuleDef&gt; [[ &lt;NaBL2-Pattern&gt; &lt;NaBL2-CGenParamsPattern&gt; &lt;NaBL2-CGenTypePattern&gt; ]] :=\n        &lt;NaBL2-RuleBody&gt;.\n  &gt;\n\n  NaBL2-RuleBody       = NaBL2-Constraint\n\n  NaBL2-Constraint.CGenRecurse = &lt;&lt;NaBL2-CGenRuleRefTop&gt;[[ &lt;NaBL2-Var&gt; &lt;NaBL2-CGenParamsTerm&gt; &lt;NaBL2-CGenTypeTerm&gt; ]]&gt;\n\n\ncontext-free syntax\n\n  NaBL2-CGenParamsTerm          =                             {ast(\"Tuple([])\")}\n  NaBL2-CGenParamsTerm.Tuple    = &lt;^ (&lt;{NaBL2-CTerm \", \"}*&gt;)&gt;\n\n  NaBL2-CGenParamsPattern       =                                {ast(\"Tuple([])\")}\n  NaBL2-CGenParamsPattern.Tuple = &lt;^ (&lt;{NaBL2-VarOrWld \", \"}*&gt;)&gt;\n\n  NaBL2-CGenTypeTerm.NoType     =\n  NaBL2-CGenTypeTerm.Type       = &lt;: &lt;NaBL2-CTerm&gt;&gt;\n\n  NaBL2-CGenTypePattern.NoType  =\n  NaBL2-CGenTypePattern.Type    = &lt;: &lt;NaBL2-CTerm&gt;&gt;\n\n\n</code></pre> \u00d7"},{"location":"nabl2.lang/syntax/nabl2/lang/rules/CGen.sdf3/#modal-h2","title":"CGen.sdf3","text":""},{"location":"nabl2.lang/syntax/nabl2/lang/rules/Names.sdf3/","title":"<code>Names.sdf3</code>","text":"<p> pdmosses/nabl/nabl2.lang/syntax/nabl2/lang/rules/Names.sdf3</p> <pre><code>module nabl2/lang/rules/Names\n\nimports\n\n  nabl2/shared/common/Identifiers\n  nabl2/lang/common/Identifiers\n\ntemplate options\n\n  keyword -/- [a-zA-Z0-9\\']\n\nsyntax\n\n  NaBL2-CGenRuleDef-CF.DefaultRule     =\n  NaBL2-CGenRuleDef-CF.InitRule   = \"init\"\n  NaBL2-CGenRuleDef-CF.RuleNoArgs = NaBL2-RuleId-LEX\n  NaBL2-CGenRuleDef-CF.Rule       = NaBL2-RuleId-LEX \"(\" LAYOUT?-CF NaBL2-RuleIds-CF LAYOUT?-CF \")\"\n\n\n  NaBL2-CGenRuleRefTop-CF.DefaultRule     =\n  NaBL2-CGenRuleRefTop-CF.RuleNoArgs = NaBL2-RuleId-LEX\n  NaBL2-CGenRuleRefTop-CF.Rule       = NaBL2-RuleId-LEX \"(\" LAYOUT?-CF NaBL2-CGenRuleRefs-CF LAYOUT?-CF \")\"\n\n  NaBL2-CGenRuleRef-CF.DefaultRule     = \"default\"\n  NaBL2-CGenRuleRef-CF.RuleNoArgs = NaBL2-RuleId-LEX\n  NaBL2-CGenRuleRef-CF.Rule       = NaBL2-RuleId-LEX \"(\" LAYOUT?-CF NaBL2-CGenRuleRefs-CF LAYOUT?-CF \")\"\n\ncontext-free syntax\n\n  NaBL2-RuleIds = &lt;&lt;{NaBL2-RuleId \", \"}*&gt;&gt;\n\n  NaBL2-CGenRuleRefs = &lt;&lt;{NaBL2-CGenRuleRef \", \"}*&gt;&gt;\n\n</code></pre> \u00d7"},{"location":"nabl2.lang/syntax/nabl2/lang/rules/Names.sdf3/#modal-h2","title":"Names.sdf3","text":""},{"location":"nabl2.lang/syntax/nabl2/lang/rules/Rules.sdf3/","title":"<code>Rules.sdf3</code>","text":"<p> pdmosses/nabl/nabl2.lang/syntax/nabl2/lang/rules/Rules.sdf3</p> <pre><code>module nabl2/lang/rules/Rules\n\nimports\n\n  nabl2/lang/rules/CGen\n  nabl2/lang/rules/Names\n\ntemplate options\n\n  keyword -/- [a-zA-Z0-9\\']\n\ncontext-free syntax\n\n  NaBL2-ModuleSection.Rules = &lt;\n    rules\n\n      &lt;{NaBL2-Rule \"\\n\\n\"}*&gt;\n\n  &gt; {longest-match}\n\nlexical syntax\n\n  NaBL2-SectionKeyword = \"rules\"\n\n</code></pre> \u00d7"},{"location":"nabl2.lang/syntax/nabl2/lang/rules/Rules.sdf3/#modal-h2","title":"Rules.sdf3","text":""},{"location":"nabl2.lang/syntax/nabl2/lang/signatures/CGen.sdf3/","title":"<code>CGen.sdf3</code>","text":"<p> pdmosses/nabl/nabl2.lang/syntax/nabl2/lang/signatures/CGen.sdf3</p> <pre><code>module nabl2/lang/signatures/CGen\n\nimports\n\n  nabl2/shared/common/Sorts\n  nabl2/lang/rules/Names\n  nabl2/lang/rules/CGen\n\ntemplate options\n\n  keyword -/- [a-zA-Z0-9\\']\n\ncontext-free syntax\n\n  NaBL2-Signature.CGen = &lt;\n    constraint generator\n      &lt;{NaBL2-CGenSig \"\\n\"}*&gt;\n\n  &gt;\n\n  NaBL2-CGenSig.CGenInitSig = &lt;init &lt;NaBL2-CGenSigParams&gt; &lt;NaBL2-CGenSigType&gt;&gt;\n  NaBL2-CGenSig.CGenSig     = &lt;&lt;NaBL2-CGenRuleDef&gt; [[ &lt;NaBL2-SortRef&gt; &lt;NaBL2-CGenSigParams&gt; &lt;NaBL2-CGenSigType&gt; ]]&gt;\n\n  NaBL2-CGenSigParams   =                               {ast(\"[]\")}\n  NaBL2-CGenSigParams   = &lt;^ (&lt;{NaBL2-SortRef \", \"}*&gt;)&gt;\n\n  NaBL2-CGenSigType.NoType = &lt;&gt;\n  NaBL2-CGenSigType.Type   = &lt;: &lt;NaBL2-SortRef&gt;&gt;\n\n</code></pre> \u00d7"},{"location":"nabl2.lang/syntax/nabl2/lang/signatures/CGen.sdf3/#modal-h2","title":"CGen.sdf3","text":""},{"location":"nabl2.lang/syntax/nabl2/lang/signatures/Constructors.sdf3/","title":"<code>Constructors.sdf3</code>","text":"<p> pdmosses/nabl/nabl2.lang/syntax/nabl2/lang/signatures/Constructors.sdf3</p> <pre><code>module nabl2/lang/signatures/Constructors\n\nimports\n\n  nabl2/shared/common/Identifiers\n  nabl2/shared/common/Sorts\n\ntemplate options\n\n  keyword -/- [a-zA-Z0-9\\_\\']\n\ncontext-free syntax\n\n  NaBL2-Signature.Sorts = &lt;\n    sorts\n      &lt;{NaBL2-Sort \"\\n\"}*&gt;\n  &gt; {longest-match}\n\n  NaBL2-Signature.Constructors = &lt;\n    constructors\n      &lt;{NaBL2-OpDecl \"\\n\"}*&gt;\n  &gt; {longest-match}\n\n  NaBL2-OpDecl.OpDecl        = [[NaBL2-OpId] : [{NaBL2-SortRef \" * \"}*] -&gt; [NaBL2-Sort]]\n  NaBL2-OpDecl.NullaryOpDecl = [[NaBL2-OpId] : [NaBL2-Sort]]\n\n</code></pre> \u00d7"},{"location":"nabl2.lang/syntax/nabl2/lang/signatures/Constructors.sdf3/#modal-h2","title":"Constructors.sdf3","text":""},{"location":"nabl2.lang/syntax/nabl2/lang/signatures/Functions.sdf3/","title":"<code>Functions.sdf3</code>","text":"<p> pdmosses/nabl/nabl2.lang/syntax/nabl2/lang/signatures/Functions.sdf3</p> <pre><code>module nabl2/lang/signatures/Functions\n\nimports\n\n  nabl2/shared/common/Identifiers\n  nabl2/shared/common/Functions\n  nabl2/shared/common/Sorts\n  nabl2/lang/common/CTerms\n\ntemplate options\n\n  keyword -/- [a-zA-Z0-9\\_\\']\n\ncontext-free syntax\n\n  NaBL2-Signature.Functions = &lt;\n    functions\n      &lt;{NaBL2-FunctionDef \"\\n\\n\"}*&gt;\n  &gt; {longest-match}\n\ncontext-free syntax\n\n  NaBL2-FunctionDef.FunctionDef = &lt;&lt;NaBL2-Function&gt; &lt;NaBL2-FunctionType&gt; &lt;NaBL2-FunctionCases&gt;&gt;\n\n  NaBL2-FunctionType  = [: [NaBL2-SortRef] -&gt; [NaBL2-SortRef]]\n\n  NaBL2-FunctionCases = &lt;\n    { &lt;{NaBL2-FunctionCase \",\\n\"}*&gt;\n    }\n  &gt;\n  NaBL2-FunctionCases = {ast(\"[]\")}\n\n  NaBL2-FunctionCase  = [[NaBL2-CTerm] -&gt; [NaBL2-CTerm]]\n\nlexical syntax\n\n  NaBL2-SectionKeyword = \"functions\"\n\n</code></pre> \u00d7"},{"location":"nabl2.lang/syntax/nabl2/lang/signatures/Functions.sdf3/#modal-h2","title":"Functions.sdf3","text":""},{"location":"nabl2.lang/syntax/nabl2/lang/signatures/NameResolution.sdf3/","title":"<code>NameResolution.sdf3</code>","text":"<p> pdmosses/nabl/nabl2.lang/syntax/nabl2/lang/signatures/NameResolution.sdf3</p> <pre><code>module nabl2/lang/signatures/NameResolution\n\nimports\n\n  nabl2/shared/common/Identifiers\n  nabl2/shared/common/ScopeGraph\n  nabl2/shared/common/Sorts\n  nabl2/shared/common/Resolution\n\ntemplate options\n\n  keyword -/- [a-zA-Z0-9\\']\n\ncontext-free syntax\n\n  NaBL2-Signature.NameResolution = &lt;\n    name resolution\n      &lt;{NaBL2-NameResolutionParam \"\\n\\n\"}*&gt;\n  &gt; {longest-match}\n\n  NaBL2-NameResolutionParam.Labels        = &lt;labels &lt;{NaBL2-PathLabel \" \"}*&gt;&gt;\n  NaBL2-NameResolutionParam.Order         = &lt;order &lt;{NaBL2-LabelOrder \",\\n\"}*&gt;&gt;\n  NaBL2-NameResolutionParam.WF            = &lt;well-formedness &lt;NaBL2-LabelRE&gt;&gt;\n  NaBL2-NameResolutionParam.DefaultELabel = &lt;default edge label &lt;NaBL2-PathLabel&gt;&gt;\n  NaBL2-NameResolutionParam.DefaultNLabel = &lt;default named label &lt;NaBL2-PathLabel&gt;&gt;\n  NaBL2-NameResolutionParam.Strategy      = &lt;strategy &lt;NaBL2-Strategy&gt;&gt;\n  NaBL2-NameResolutionParam.PathRelevance = &lt;paths &lt;NaBL2-Relevance&gt;&gt;\n\ncontext-free syntax\n\n  NaBL2-Signature.Namespaces = &lt;\n    namespaces\n      &lt;{NaBL2-NamespaceDef \"\\n\\n\"}*&gt;\n  &gt; {longest-match}\n\n  NaBL2-NamespaceDef.NamespaceDef = &lt;&lt;NaBL2-Namespace&gt; &lt;NaBL2-NamespaceType&gt; &lt;NaBL2-NamespaceProperties&gt;&gt;\n\n  NaBL2-NamespaceType.NoType  =\n  NaBL2-NamespaceType.Type    = &lt;: &lt;NaBL2-SortRef&gt;&gt;\n\n  NaBL2-NamespaceProperties = &lt;{ &lt;{NaBL2-NamespaceProperty \",\\n\"}*&gt; }&gt;\n  NaBL2-NamespaceProperties = {ast(\"[]\")}\n\n  NaBL2-NamespaceProperty.PropertyDef = &lt;&lt;NaBL2-PropertyId&gt; : &lt;NaBL2-SortRef&gt;&gt;\n\n</code></pre> \u00d7"},{"location":"nabl2.lang/syntax/nabl2/lang/signatures/NameResolution.sdf3/#modal-h2","title":"NameResolution.sdf3","text":""},{"location":"nabl2.lang/syntax/nabl2/lang/signatures/Relations.sdf3/","title":"<code>Relations.sdf3</code>","text":"<p> pdmosses/nabl/nabl2.lang/syntax/nabl2/lang/signatures/Relations.sdf3</p> <pre><code>module nabl2/lang/signatures/Relations\n\nimports\n\n  nabl2/shared/common/Identifiers\n  nabl2/shared/common/Relations\n  nabl2/shared/common/Sorts\n\ntemplate options\n\n  keyword -/- [a-zA-Z0-9\\_\\']\n\ncontext-free syntax\n\n  NaBL2-Signature.Relations = &lt;\n    relations\n      &lt;{NaBL2-RelationDef \"\\n\\n\"}*&gt;\n  &gt; {longest-match}\n\ncontext-free syntax\n\n  NaBL2-RelationDef.RelationDef = &lt;&lt;{NaBL2-RelationOption \", \"}*&gt; &lt;NaBL2-Relation&gt; &lt;NaBL2-RelationType&gt; &lt;NaBL2-VariancePatterns&gt;&gt;\n\n  NaBL2-RelationOption = NaBL2-Reflexivity\n  NaBL2-RelationOption = NaBL2-Symmetry\n  NaBL2-RelationOption = NaBL2-Transitivity\n\n  NaBL2-RelationType = &lt;: &lt;NaBL2-SortRef&gt; * &lt;NaBL2-SortRef&gt;&gt;\n\n  NaBL2-VariancePatterns      = &lt;{ &lt;{NaBL2-VariancePattern \",\\n\"}*&gt; }&gt;\n  NaBL2-VariancePatterns      = {ast(\"[]\")}\n\n lexical syntax\n\n  NaBL2-Keyword = \"relations\"\n\n</code></pre> \u00d7"},{"location":"nabl2.lang/syntax/nabl2/lang/signatures/Relations.sdf3/#modal-h2","title":"Relations.sdf3","text":""},{"location":"nabl2.lang/syntax/nabl2/lang/signatures/Signature.sdf3/","title":"<code>Signature.sdf3</code>","text":"<p> pdmosses/nabl/nabl2.lang/syntax/nabl2/lang/signatures/Signature.sdf3</p> <pre><code>module nabl2/lang/signatures/Signature\n\nimports\n\n  nabl2/lang/signatures/CGen\n  nabl2/lang/signatures/Constructors\n  nabl2/lang/signatures/Functions\n  nabl2/lang/signatures/NameResolution\n  nabl2/lang/signatures/Relations\n\ntemplate options\n\n  keyword -/- [a-zA-Z0-9\\']\n\ncontext-free syntax\n\n  NaBL2-ModuleSection.Signature = &lt;\n    signature\n      &lt;{NaBL2-Signature \"\\n\\n\"}*&gt;\n  &gt;\n\nlexical syntax\n\n  NaBL2-SectionKeyword = \"signature\"\n\n\n</code></pre> \u00d7"},{"location":"nabl2.lang/syntax/nabl2/lang/signatures/Signature.sdf3/#modal-h2","title":"Signature.sdf3","text":""}]}