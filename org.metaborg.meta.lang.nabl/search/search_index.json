{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>This website is a hyperlinked twin of a Spoofax project repository.</p> <p>The icons  and  toggle between light and dark mode.</p> <p>Hyperlinked twins support precise name-based code navigation using ordinary web browsers:</p> <ul> <li>Simply click on a name reference to jump to the corresponding declaration.</li> <li>Click on a declaration to jump to the first reference to it (if any).</li> <li>When the references are in multiple files,   clicking on the declaration displays a modal with a link to the first reference in each file.</li> </ul> <p>The sources of the webpages were generated by Spoofax from raw code, in the same way as for other hyperlinked twins.</p> <p>The aim is for a future release of Spoofax to support generation of hyperlinked twins for code in all Spoofax meta-languages.</p> <p>Warning</p> <p>The Spoofax implementation and the generated website have not yet been reviewed by the Spoofax developers.</p>"},{"location":"org.metaborg.meta.lang.nabl/","title":"NaBL","text":"<p>In Spoofax, name bindings can be specified in NaBL. NaBL stands for Name Binding Language and the acronym is pronounced 'enable'.</p> <p>Name binding is specified in NaBL in terms of:</p> <ul> <li>namespaces, </li> <li>binding instances (name declarations), </li> <li>bound instances (name references),</li> <li>scopes, and</li> <li>imports.</li> </ul> <p>The NaBL documentation explains the details.</p> <p>NaBL is now deprecated. It was originally superseded by NaBL2, and both have now been superseded by Statix.</p> <p>However, NaBL is still used in Spoofax 2 for specifying the name binding of several meta-languages (e.g., SDF3).</p>"},{"location":"org.metaborg.meta.lang.nabl/#syntax","title":"Syntax","text":"<p><code>syntax/NameBindingLanguage.sdf3</code></p> <p>The syntax of NaBL is specified in SDF3.</p>"},{"location":"org.metaborg.meta.lang.nabl/#name-binding","title":"Name binding","text":"<p><code>trans/analysis/names.nab</code></p> <p>The name binding of NaBL is specified in NaBL itself.</p> <p>This example demonstrates generation of a hyperlinked twin from a bootstrapped meta-language definition.</p>"},{"location":"org.metaborg.meta.lang.nabl/src-gen/syntax/permissive-water.sdf3/","title":"<code>permissive-water.sdf3</code>","text":"<pre><code>module permissive-water\n\n// Key idea: WATER is the inverse of LAYOUT\n\ncontext-free syntax\n  // Allow WATER on places where LAYOUT may occur\n  LAYOUT.WATER = WATER\n\nlexical sorts\n  WATER\n  WATERTOKEN\n  WATERTOKENSTART\n  WATERTOKENSEPARATOR\n\nlexical syntax\n  // Separate water regions into smaller chunks for recovery costs calculation\n  WATER = WATERTOKEN\n  WATER = WATERTOKENSEPARATOR\n\n  // Allow to skip over identifier strings\n  WATERTOKEN      = WATERTOKENSTART [A-Za-z0-9\\_]*\n  WATERTOKENSTART = [A-Za-z0-9\\_] {recover}\n\n  // Allow to skip over special characters that are neither part of identifiers nor whitespace characters\n  WATERTOKENSEPARATOR = ~[A-Za-z0-9\\_\\ \\t\\12\\r\\n\\*] {recover}\n\nlexical restrictions\n  WATERTOKEN -/- [A-Za-z0-9\\_]\n</code></pre> \u00d7"},{"location":"org.metaborg.meta.lang.nabl/src-gen/syntax/permissive-water.sdf3/#modal-h2","title":"permissive-water.sdf3","text":""},{"location":"org.metaborg.meta.lang.nabl/syntax/NameBindingLanguage.sdf3/","title":"<code>NameBindingLanguage.sdf3</code>","text":"<p> pdmosses/nabl/org.metaborg.meta.lang.nabl/syntax/NameBindingLanguage.sdf3</p> <pre><code>module NameBindingLanguage\n\nimports \n\n  common/Layout \n  common/Identifiers  \n  terms/Signatures  \n  terms/Terms \n  formulas/Formulas \n  formulas/Propositions \n  core/Modules  \n  core/Namespaces \n  core/Properties \n  terms/Vars\n\ncontext-free start-symbols\n\n  Start\n\ncontext-free syntax\n\n  Start = Module \n\ncontext-free syntax // namespaces\n\n  RestrictedNamespaceRef.Restricted = &lt;&lt;Restriction*&gt; &lt;NamespaceRef&gt;&gt; \n  Restriction.Imported = &lt;imported&gt; \n\ncontext-free syntax // properties\n\n  PropertyDef.QualityDef = &lt;\n  &lt;PropertyID&gt; of &lt;{NamespaceRef \", \"}+&gt;&gt;\n\n  QualityRef.QualityRef = &lt;&lt;PropertyID&gt;&gt;\n\n  PropertyTerm.PropertyTerm = &lt;of &lt;PropertyRef&gt; &lt;Term&gt;&gt;\n  PropertyTerm.QualityTerm = &lt;of quality &lt;QualityRef&gt;&gt;\n  PropertyPattern.PropertyPattern = &lt;of &lt;PropFilter&gt; &lt;PropertyRef&gt; &lt;Term&gt;&gt;\n  PropertyPattern.QualityPattern = &lt;of quality &lt;QualityRef&gt;&gt;\n\n  PropFilter.Equal = &lt;&gt; \n  PropFilter.Conformant = &lt;conformant&gt; \n\nlexical syntax\n\n  PropertyID = \"quality\" {reject}\n  SectionKeyword = \"binding\" \n\ncontext-free syntax // binding rules\n\n  ModuleSection.Bindings = &lt;\n  binding rules\n    &lt;BindingRule*&gt;\n  &gt; \n\n  BindingRule.BindingRule = &lt;\n  &lt;Pattern&gt; &lt;Constraints&gt; : &lt;BindingClause+&gt;&gt; \n\ncontext-free syntax // clauses\n\n  BindingClause.DefClause = &lt;\n    &lt;DefKind&gt; defines &lt;Unique&gt; &lt;NamespaceRef&gt; &lt;Term&gt; &lt;PropertyTerm*&gt; &lt;InDefScopes&gt; &lt;Constraints&gt;\n  &gt; \n\n  DefKind.Explicit = &lt;&gt; \n  DefKind.Implicit = &lt;implicitly&gt; \n\n  Unique.Unique = &lt;&gt; \n  Unique.Unique = &lt;unique&gt; \n  Unique.NonUnique = &lt;non-unique&gt; \n\n  BindingClause.ScopeClause = &lt;\n    scopes &lt;{NamespaceRef \", \"}+&gt;\n  &gt; \n\n  BindingClause.NonTransitiveScopeClause = &lt;\n    non-transitively scopes &lt;{NamespaceRef \", \"}+&gt;\n  &gt; \n\n  BindingClause.RefClause = &lt;\n    &lt;{RefClausePart \"otherwise\"}+&gt;\n  &gt; \n\n  RefClausePart.RefClausePart = &lt;\n  refers to &lt;Disambiguator&gt; &lt;NamespaceRef&gt; &lt;Term&gt; &lt;PropertyPattern*&gt; &lt;InRefScope&gt; &lt;Constraints&gt;&gt; \n\n  BindingClause.ImportClause = &lt;\n    &lt;{ImportClausePart \"otherwise\\n\"}+&gt;\n  &gt; \n\n  ImportClausePart.SingleImport = &lt;\n  imports &lt;Disambiguator&gt; &lt;NamespaceRef&gt; &lt;Term&gt; &lt;PropertyPattern*&gt; &lt;FromRefScope&gt; &lt;Alias&gt; &lt;IntoDefScopes&gt; &lt;Constraints&gt;&gt; \n  ImportClausePart.WildcardImport = &lt;\n  imports &lt;{RestrictedNamespaceRef \", \"}+&gt; &lt;PropertyPattern*&gt; &lt;FromRefScope&gt; &lt;IntoDefScopes&gt; &lt;Constraints&gt;&gt; \n\n  Alias.None = &lt;&gt; \n  Alias.Alias = &lt;as &lt;Term&gt;&gt; \n\n  BindingClause.FilterClause = &lt;\n    filters &lt;NamespaceRef&gt; &lt;Term&gt; \n      &lt;Filters&gt;\n      &lt;Constraints&gt;\n  &gt; \n\n  BindingClause.DisambiguateClause = &lt;\n    disambiguates &lt;NamespaceRef&gt; &lt;Term&gt;\n      &lt;Filters&gt;\n      by &lt;Disambiguator&gt; \n      &lt;Constraints&gt;\n   &gt; \n  Disambiguator.MinimalDistance = &lt;\n    minimal distance &lt;Term&gt; &lt;Relation&gt; &lt;Term&gt;\n  &gt; \n\ncontext-free syntax // scopes\n\n  InDefScopes.Current = &lt;&gt; \n  InDefScopes = &lt;in &lt;DefScopes&gt;&gt; {bracket}\n\n  IntoDefScopes.Current = &lt;&gt; \n  IntoDefScopes = &lt;into &lt;DefScopes&gt;&gt; {bracket}\n\n  DefScopes.Current = &lt;current scope&gt; \n  DefScopes.DefScopes = &lt;&lt;{DefScope \", \"}+&gt;&gt; \n  DefScope.Subsequent = &lt;subsequent scope&gt; \n  DefScope.DefScope = &lt;&lt;Term&gt;&gt; \n\n  InRefScope.Current = &lt;&gt; \n  InRefScope = &lt;in &lt;RefScope&gt;&gt; {bracket}\n\n  FromRefScope.Current = &lt;&gt; \n  FromRefScope = &lt;from &lt;RefScope&gt;&gt; {bracket}\n\n  RefScope.Current = &lt;current scope&gt; \n  RefScope.Enclosing = &lt;enclosing &lt;NamespaceRef&gt;&gt; \n  RefScope.Context = &lt;&lt;Disambiguator&gt; &lt;NamespaceRef&gt; &lt;Term&gt; &lt;PropertyPattern*&gt; &lt;InRefScope&gt;&gt; \n  RefScope.RefScope = &lt;&lt;Term&gt;&gt; \n\n  Disambiguator.All = &lt;&gt; \n  Disambiguator.Best = &lt;best&gt; \n\ncontext-free syntax // constraints\n\n  Constraints.NoWhere = &lt;&gt; \n  Constraints.Where = &lt;\n    where &lt;Formula&gt;\n  &gt; {bracket}\n\n  Filters.Filter = &lt;\n    with &lt;Formula&gt;\n  &gt; \n\n  Proposition.PropertyPattern = &lt;&lt;VarRef&gt; has &lt;PropertyRef&gt; &lt;Pattern&gt;&gt; {avoid}\n\nlexical syntax\n\n  Id = \"into\" {reject}\n  Id = \"enclosing\" {reject}\n\ntemplate options\n\n  keyword -/- [a-zA-z]\n\n</code></pre> \u00d7"},{"location":"org.metaborg.meta.lang.nabl/syntax/NameBindingLanguage.sdf3/#modal-h2","title":"NameBindingLanguage.sdf3","text":""},{"location":"org.metaborg.meta.lang.nabl/syntax/common/Identifiers.sdf3/","title":"<code>Identifiers.sdf3</code>","text":"<p> pdmosses/nabl/org.metaborg.meta.lang.nabl/syntax/common/Identifiers.sdf3</p> <pre><code>module common/Identifiers\n\nsorts\n\n  Id LId LCID UCID\n\nlexical syntax\n\n  Id = [a-zA-Z\\_] [a-zA-Z0-9\\'\\-\\_]* \n  LId = [a-zA-Z\\_] [a-zA-Z0-9\\'\\-\\_]* \"*\" \n  Id = [\\'] [a-z]+ \n  LCID = [a-z] [a-zA-Z0-9\\'\\-\\_]* \n  UCID = [A-Z] [a-zA-Z0-9\\'\\-\\_]* \n\nlexical restrictions\n\n  Id -/- [a-zA-Z0-9\\'\\_\\*]\n  Id -/- [\\-].~[\\&gt;]\n  LId -/- [a-zA-Z0-9\\'\\-\\_]\n  LCID -/- [a-zA-Z0-9\\'\\-\\_]\n  UCID -/- [a-zA-Z0-9\\'\\-\\_]\n\nlexical syntax\n\n  Id = \"_\" {reject}\n  Id = \"'\" {reject}\n  Id = Keyword {reject}\n  LId = Keyword {reject}\n  LCID = Keyword {reject}\n  UCID = Keyword {reject}\n\nsorts\n\n  Keyword\n\nlexical syntax\n\n  Keyword = \"module\" \n  Keyword = \"rules\" \n  Keyword = \"namespaces\" \n  Keyword = \"properties\" \n\n</code></pre> \u00d7"},{"location":"org.metaborg.meta.lang.nabl/syntax/common/Identifiers.sdf3/#modal-h2","title":"Identifiers.sdf3","text":""},{"location":"org.metaborg.meta.lang.nabl/syntax/common/Layout.sdf3/","title":"<code>Layout.sdf3</code>","text":"<p> pdmosses/nabl/org.metaborg.meta.lang.nabl/syntax/common/Layout.sdf3</p> <pre><code>module common/Layout\n\nsorts\n\n  LongCom CommChar Asterisk Eof\n\nlexical syntax\n\n  LAYOUT = [\\t\\ \\n\\r] \n  LAYOUT = \"//\" ~[\\n]* [\\n] | Eof \n  Eof =  \n  LAYOUT = LongCom \n  LongCom = \"/*\" CommChar* \"*/\" \n  CommChar = ~[\\*] \n  CommChar = Asterisk \n  Asterisk = \"*\" \n\nlexical restrictions\n\n  Asterisk -/- [\\/]\n  Eof -/- ~[]\n\ncontext-free restrictions\n\n  LAYOUT? -/- [\\ \\t\\n\\r]\n  LAYOUT? -/- [\\/].[\\*]\n  LAYOUT? -/- [\\/].[\\/]\n\n</code></pre> \u00d7"},{"location":"org.metaborg.meta.lang.nabl/syntax/common/Layout.sdf3/#modal-h2","title":"Layout.sdf3","text":""},{"location":"org.metaborg.meta.lang.nabl/syntax/core/Modules.sdf3/","title":"<code>Modules.sdf3</code>","text":"<p> pdmosses/nabl/org.metaborg.meta.lang.nabl/syntax/core/Modules.sdf3</p> <pre><code>module core/Modules\n\ncontext-free syntax\n\n  Module.Module = &lt;module &lt;ModuleID&gt; \n\n    &lt;ModuleSection*&gt;&gt; \n\n  ModuleSection.Imports = &lt;\n    imports &lt;ImportModule*&gt;&gt; \n\n  ImportModule.ImportWildcard = &lt;&lt;ModuleID&gt;/-&gt; \n  ImportModule.Import = &lt;&lt;ModuleID&gt;&gt; \n\nlexical syntax\n\n  ModuleID = {ModuleIDPart \"/\"}+ \n  ModuleIDPart = [a-zA-Z\\.\\_] [a-zA-Z0-9\\'\\.\\-\\_]* \n  ModuleID = SectionKeyword {reject}\n\n  SectionKeyword = \"imports\" \n\nlexical restrictions\n\n  ModuleID -/- [a-zA-Z0-9\\'\\.\\-\\_]\n\n</code></pre> \u00d7"},{"location":"org.metaborg.meta.lang.nabl/syntax/core/Modules.sdf3/#modal-h2","title":"Modules.sdf3","text":""},{"location":"org.metaborg.meta.lang.nabl/syntax/core/Namespaces.sdf3/","title":"<code>Namespaces.sdf3</code>","text":"<p> pdmosses/nabl/org.metaborg.meta.lang.nabl/syntax/core/Namespaces.sdf3</p> <pre><code>module core/Namespaces\n\nimports \n\n  common/Identifiers  \n  core/Modules\n\nlexical syntax\n\n  NamespaceID = Id \n  NamespaceID = SectionKeyword {reject}\n  SectionKeyword = \"namespaces\" \n\ncontext-free syntax\n\n  ModuleSection.Namespaces = &lt;\n  namespaces   \n    &lt;NamespaceDef*&gt;\n  &gt; \n\n  NamespaceDef.NamespaceDef = &lt;&lt;NamespaceID&gt;\n    &gt; \n\n  NamespaceRef.NamespaceRef = &lt;&lt;LanguageRef&gt;&lt;NamespaceID&gt;&gt; \n\n  LanguageRef.CurrentLanguage = &lt;&gt; \n  LanguageRef.LanguageRef = &lt;&lt;Id&gt;.&gt; \n\n</code></pre> \u00d7"},{"location":"org.metaborg.meta.lang.nabl/syntax/core/Namespaces.sdf3/#modal-h2","title":"Namespaces.sdf3","text":""},{"location":"org.metaborg.meta.lang.nabl/syntax/core/Properties.sdf3/","title":"<code>Properties.sdf3</code>","text":"<p> pdmosses/nabl/org.metaborg.meta.lang.nabl/syntax/core/Properties.sdf3</p> <pre><code>module core/Properties\n\nimports\n\n        common/Identifiers  \n        terms/Signatures  \n        terms/Vars  \n        terms/Terms \n        formulas/Formulas \n        core/Namespaces\n\nlexical syntax\n\n  PropertyID = Id \n  PropertyID = \"type\" {reject}\n  PropertyID = SectionKeyword {reject}\n\n  SectionKeyword = \"properties\" \n\n  Relation = \"&lt;\" [A-Za-z\\-]* \":\" \n\ncontext-free syntax\n\n  ModuleSection.Properties = &lt;\n  properties   \n    &lt;PropertyDef*&gt;\n  &gt; \n\n  PropertyDef.PropertyDef = &lt;\n    &lt;PropertyID&gt; of &lt;{NamespaceRef \", \"}+&gt; : &lt;Sort&gt;&gt; \n\n  PropertyRef.TypeProp = &lt;type&gt; \n  PropertyRef.PropertyRef = &lt;&lt;PropertyID&gt;&gt; \n\n</code></pre> \u00d7"},{"location":"org.metaborg.meta.lang.nabl/syntax/core/Properties.sdf3/#modal-h2","title":"Properties.sdf3","text":""},{"location":"org.metaborg.meta.lang.nabl/syntax/core/Scopes.sdf3/","title":"<code>Scopes.sdf3</code>","text":"<p> pdmosses/nabl/org.metaborg.meta.lang.nabl/syntax/core/Scopes.sdf3</p> <pre><code>module core/Scopes\n\nimports \n\n        common/Identifiers  \n        core/Namespaces \n        terms/Vars\n\nlexical syntax\n\n  ScopeID = Id \n\ncontext-free syntax\n\n  LocalScope.NamedScope = &lt;&lt;NamespaceRef&gt; &lt;VarRef&gt;&gt; \n  LocalScope.CurrentScope = &lt;current &lt;NamespaceRef&gt; scope&gt; \n  LocalScope.TermScope = &lt;&lt;NamespaceRef&gt; scope  at &lt;VarRef&gt;&gt; \n  LocalScope.Enclosing = &lt;enclosing &lt;NamespaceRef&gt; of &lt;LocalScope&gt;&gt; \n\n  Scope.GlobalScope = &lt;global scope&gt; \n  Scope = &lt;&lt;LocalScope&gt;&gt; \n  Scope.Anonymous = &lt;new scope in &lt;Scope&gt;&gt; \n\ncontext-free syntax\n\n  Clause.ChildScope = &lt;\n    &lt;Scope&gt; scopes &lt;NamespaceRef&gt; at child nodes\n  &gt; \n\n  Clause.SubsequentScope = &lt;\n    &lt;Scope&gt; scopes &lt;NamespaceRef&gt; at subsequent nodes\n  &gt; \n\n  Clause.NodeScope = &lt;\n    requires &lt;NamespaceRef&gt; scope at &lt;VarRef&gt;\n  &gt; \n\n</code></pre> \u00d7"},{"location":"org.metaborg.meta.lang.nabl/syntax/core/Scopes.sdf3/#modal-h2","title":"Scopes.sdf3","text":""},{"location":"org.metaborg.meta.lang.nabl/syntax/formulas/Formulas.sdf3/","title":"<code>Formulas.sdf3</code>","text":"<p> pdmosses/nabl/org.metaborg.meta.lang.nabl/syntax/formulas/Formulas.sdf3</p> <pre><code>module formulas/Formulas\n\nimports \n\n  terms/Terms \n  formulas/Propositions\n\ncontext-free syntax\n\n  Formula = &lt;&lt;Proposition&gt;&gt; \n\n  Formula.Not = &lt;\n    not &lt;Formula&gt;\n  &gt; \n  Formula.And = &lt;\n    &lt;Formula&gt; \n    and &lt;Formula&gt;\n  &gt; {left}\n  Formula.Or = &lt;\n    &lt;Formula&gt; \n    or &lt;Formula&gt;\n  &gt; {left}\n\n  Formula = &lt;(&lt;Formula&gt;)&gt; {bracket}\n\ncontext-free priorities\n\n  Formula.Not &gt; Formula.And &gt; Formula.Or\n\n</code></pre> \u00d7"},{"location":"org.metaborg.meta.lang.nabl/syntax/formulas/Formulas.sdf3/#modal-h2","title":"Formulas.sdf3","text":""},{"location":"org.metaborg.meta.lang.nabl/syntax/formulas/Messages.sdf3/","title":"<code>Messages.sdf3</code>","text":"<p> pdmosses/nabl/org.metaborg.meta.lang.nabl/syntax/formulas/Messages.sdf3</p> <pre><code>module formulas/Messages\n\nimports\n\n  terms/Terms\n\ncontext-free syntax\n\n  Message.Message = &lt;&lt;MessageKind&gt; &lt;Term&gt; on &lt;Term&gt;&gt; \n\n  MessageKind.Error = &lt;error&gt; \n  MessageKind.Warning = &lt;warning&gt; \n  MessageKind.Note = &lt;note&gt; \n\n</code></pre> \u00d7"},{"location":"org.metaborg.meta.lang.nabl/syntax/formulas/Messages.sdf3/#modal-h2","title":"Messages.sdf3","text":""},{"location":"org.metaborg.meta.lang.nabl/syntax/formulas/Propositions.sdf3/","title":"<code>Propositions.sdf3</code>","text":"<p> pdmosses/nabl/org.metaborg.meta.lang.nabl/syntax/formulas/Propositions.sdf3</p> <pre><code>module formulas/Propositions\n\nimports \n\n  terms/Terms \n  terms/Vars  \n  core/Namespaces \n  core/Scopes \n  core/Properties\n\ncontext-free syntax\n\n  Proposition.True = &lt;true&gt; \n  Proposition.False = &lt;false&gt; \n  Proposition.Eq = [[VarRef] == [Term]] \n\n  Proposition.Match = [[VarRef] =&gt; [Pattern]] \n  Proposition.DefOf = [definition of [VarRef] =&gt; [Var]] \n  Proposition.DefOf = [definition of [NamespaceRef] [VarRef] =&gt; [Var]] \n  Proposition.ScopeOf = [[Scope] =&gt; [Var]] \n  Proposition.ResolvesTo = &lt;&lt;Term&gt; resolves to &lt;NamespaceRef&gt; &lt;Var&gt;&gt; \n\n  Proposition.HasProperty = &lt;&lt;VarRef&gt; has &lt;PropertyRef&gt; &lt;Var&gt;&gt; \n  Proposition.InRelation = [[Term] [Relation] [Term]] \n\n</code></pre> \u00d7"},{"location":"org.metaborg.meta.lang.nabl/syntax/formulas/Propositions.sdf3/#modal-h2","title":"Propositions.sdf3","text":""},{"location":"org.metaborg.meta.lang.nabl/syntax/lexical/Identifiers.sdf3/","title":"<code>Identifiers.sdf3</code>","text":"<p> pdmosses/nabl/org.metaborg.meta.lang.nabl/syntax/lexical/Identifiers.sdf3</p> <pre><code>module lexical/Identifiers\n\nsorts \n\n  Id LId LCID UCID ModuleID\n\nlexical syntax\n\n  Id  = [a-zA-Z\\_] [a-zA-Z0-9\\'\\-\\_]*    \n  Id  = \"_\" {reject}\n  Id  = [\\'] [a-z]+\n  LId = [a-zA-Z\\_] [a-zA-Z0-9\\'\\-\\_]* \"*\"\n\n  LCID = [a-z] [a-zA-Z0-9\\'\\-\\_]*\n  UCID = [A-Z] [a-zA-Z0-9\\'\\-\\_]*\n\n  ModuleID     = {ModuleIDPart \"/\"}+ \n  ModuleIDPart = [a-zA-Z\\.\\_] [a-zA-Z0-9\\'\\.\\-\\_]* \n\nlexical restrictions\n\n  Id       -/- [a-zA-Z0-9\\'\\_\\*]\n  Id       -/- [\\-].~[\\&gt;]\n  LId      -/- [a-zA-Z0-9\\'\\-\\_]\n  LCID     -/- [a-zA-Z0-9\\'\\-\\_]\n  UCID     -/- [a-zA-Z0-9\\'\\-\\_]\n  ModuleID -/- [a-zA-Z0-9\\'\\.\\-\\_]\n\n</code></pre> \u00d7"},{"location":"org.metaborg.meta.lang.nabl/syntax/lexical/Identifiers.sdf3/#modal-h2","title":"Identifiers.sdf3","text":""},{"location":"org.metaborg.meta.lang.nabl/syntax/lexical/Layout.sdf3/","title":"<code>Layout.sdf3</code>","text":"<p> pdmosses/nabl/org.metaborg.meta.lang.nabl/syntax/lexical/Layout.sdf3</p> <pre><code>module lexical/Layout\n\nsorts LongCom CommChar Asterisk Eof \n\nlexical syntax\n\n  LAYOUT   = [\\t\\ \\n\\r] \n\n  LAYOUT   =\"//\" ~[\\n]* ([\\n] | Eof)\n  Eof      = \n\n  LAYOUT   = LongCom\n  LongCom  = \"/*\" CommChar* \"*/\"\n  CommChar = ~[\\*]\n  CommChar = Asterisk\n  Asterisk = \"*\"\n\nlexical restrictions\n\n  Asterisk -/- [\\/]\n  Eof      -/- ~[]\n\ncontext-free restrictions\n\n  LAYOUT? -/- [\\ \\t\\n\\r]\n  LAYOUT? -/- [\\/].[\\*]\n  LAYOUT? -/- [\\/].[\\/]\n\n</code></pre> \u00d7"},{"location":"org.metaborg.meta.lang.nabl/syntax/lexical/Layout.sdf3/#modal-h2","title":"Layout.sdf3","text":""},{"location":"org.metaborg.meta.lang.nabl/syntax/terms/Constants.sdf3/","title":"<code>Constants.sdf3</code>","text":"<p> pdmosses/nabl/org.metaborg.meta.lang.nabl/syntax/terms/Constants.sdf3</p> <pre><code>module terms/Constants\n\nsorts \n\n  Int Real String StrChar\n\nlexical syntax\n\n  Int     = [\\-]? [0-9]+\n  Real    = [\\-]? [0-9]+ [\\.] [0-9]+\n  String  = \"\\\"\" StrChar* \"\\\"\"\n  StrChar = ~[\\\"\\\\]\n  StrChar = [\\\\] [\\\"tnr\\\\]\n\nsorts Char CharChar\n\nlexical syntax\n\n  Char     = \"'\" CharChar \"'\"\n  CharChar = ~[\\']\n  CharChar = [\\\\] [\\'ntr\\ ]\n\nlexical syntax\n\n  Id = Char {reject}\n\n</code></pre> \u00d7"},{"location":"org.metaborg.meta.lang.nabl/syntax/terms/Constants.sdf3/#modal-h2","title":"Constants.sdf3","text":""},{"location":"org.metaborg.meta.lang.nabl/syntax/terms/Signatures.sdf3/","title":"<code>Signatures.sdf3</code>","text":"<p> pdmosses/nabl/org.metaborg.meta.lang.nabl/syntax/terms/Signatures.sdf3</p> <pre><code>module terms/Signatures\n\nimports\n\n        common/Identifiers\n        terms/Constants\n\nsorts \n\n  Sort\n\ncontext-free syntax\n\n        Sort.SortVar    = LCID\n        Sort.SortNoArgs = UCID\n        Sort.Sort       = Id \"(\" {Sort \",\"}* \")\"\n\nsorts TypeDecl PPTerm\n\ncontext-free syntax\n\n  TypeDecl.TypeDecl  = Id     TypeParams PPTerm\n  TypeDecl.TypeDeclQ = String TypeParams PPTerm\n  PPTerm.Str         = String\n\nsorts TypeParams TypeParam \n\ncontext-free syntax\n\n  TypeParams.NoTypeParams =\n  TypeParams.TypeParams   = \"(\" {TypeParam \",\"}+ \")\"\n  TypeParam.TypeParam     = Id \":\" Sort\n\n%%%\n%% Restriction is required for the Sort* in Sdecl: List(a) is\n%% ambiguous.\n%%%\ncontext-free restrictions\n\n        Sort -/- [\\(]\n\n</code></pre> \u00d7"},{"location":"org.metaborg.meta.lang.nabl/syntax/terms/Signatures.sdf3/#modal-h2","title":"Signatures.sdf3","text":""},{"location":"org.metaborg.meta.lang.nabl/syntax/terms/StringQuotations.sdf3/","title":"<code>StringQuotations.sdf3</code>","text":"<p> pdmosses/nabl/org.metaborg.meta.lang.nabl/syntax/terms/StringQuotations.sdf3</p> <pre><code>module terms/StringQuotations\n\nimports \n\n  terms/Terms\n\nsorts\n\n  PPTerm\n  StringQuotation\n  StringQuotedPart1 StringQuotedChars1 QuotedBracket1 Dollar1\n  StringQuotedPart2 StringQuotedChars2 QuotedBracket2 Dollar2\n  StringQuotedPart3 StringQuotedChars3 QuotedBracket3 Dollar3\n  StringQuotedPart4 StringQuotedChars4 QuotedBracket4 Dollar4\n  Padding\n\nsyntax\n\n  PPTerm-CF = StringQuotation\n\n  StringQuotation.StringQuotation1 = \"$\" \"[\" Padding StringQuotedPart1* \"]\"\n  StringQuotedPart1.StringEscape1  = Padding \"[\" LAYOUT?-CF Term-CF LAYOUT?-CF \"]\"\n  StringQuotedPart1.QStr           = StringQuotedChars1-LEX\n  StringQuotedPart1.QDollar        = Dollar1-LEX\n  StringQuotedPart1.QBr            = \"$\" QuotedBracket1-LEX \"$\"\n  StringQuotedChars1-LEX           = ~[\\[\\]\\$]+\n  QuotedBracket1-LEX               = [\\[\\]]\n  Dollar1-LEX                      = \"$\"\n\n  StringQuotation.StringQuotation2 = \"$\" \"{\" Padding StringQuotedPart2* \"}\"\n  StringQuotedPart2.StringEscape2  =  Padding \"{\" LAYOUT?-CF Term-CF LAYOUT?-CF \"}\"\n  StringQuotedPart2.QStr           = StringQuotedChars2-LEX\n  StringQuotedPart2.QDollar        = Dollar2-LEX\n  StringQuotedPart2.QBr            = \"$\" QuotedBracket2-LEX \"$\"\n  StringQuotedChars2-LEX           = ~[\\{\\}\\$]+\n  QuotedBracket2-LEX               = [\\{\\}]\n  Dollar2-LEX                      = \"$\"\n\n  StringQuotation.StringQuotation3 = \"$\" \"(\" Padding StringQuotedPart3* \")\"\n  StringQuotedPart3.StringEscape3  = Padding \"(\" LAYOUT?-CF Term-CF LAYOUT?-CF \")\"\n  StringQuotedPart3.QStr           = StringQuotedChars3-LEX\n  StringQuotedPart3.QDollar        = Dollar3-LEX\n  StringQuotedPart3.QBr            = \"$\" QuotedBracket3-LEX \"$\"\n  StringQuotedChars3-LEX           = ~[\\(\\)\\$]+\n  QuotedBracket3-LEX               = [\\(\\)]\n  Dollar3-LEX                      = \"$\"\n\n  StringQuotation.StringQuotation4 = \"$\" \"&lt;\" Padding StringQuotedPart4* \"&gt;\"\n  StringQuotedPart4.StringEscape4  = Padding \"&lt;\"  LAYOUT?-CF Term-CF LAYOUT?-CF \"&gt;\"\n  StringQuotedPart4.QStr           = StringQuotedChars4-LEX\n  StringQuotedPart4.QDollar        = Dollar4-LEX\n  StringQuotedPart4.QBr            = \"$\" QuotedBracket4-LEX \"$\"\n  StringQuotedChars4-LEX           = ~[\\&lt;\\&gt;\\$]+\n  QuotedBracket4-LEX               = [\\&lt;\\&gt;]\n  Dollar4-LEX                      = \"$\"\n\n  // Padding is a dummy lexical that will contain the indentation prefix of every quotation\n  Padding = Padding-LEX \n  Padding-LEX = {indentpadding}\n\nlexical restrictions\n\n  StringQuotedChars1 -/- ~[\\[\\]\\$]\n  StringQuotedChars2 -/- ~[\\{\\}\\$]\n  StringQuotedChars3 -/- ~[\\(\\)\\$]\n  StringQuotedChars4 -/- ~[\\&lt;\\&gt;\\$]\n  Dollar1 -/- [\\[\\]].[\\$]\n  Dollar2 -/- [\\{\\}].[\\$]\n  Dollar3 -/- [\\(\\)].[\\$]\n  Dollar4 -/- [\\&lt;\\&gt;].[\\$]\n\n</code></pre> \u00d7"},{"location":"org.metaborg.meta.lang.nabl/syntax/terms/StringQuotations.sdf3/#modal-h2","title":"StringQuotations.sdf3","text":""},{"location":"org.metaborg.meta.lang.nabl/syntax/terms/Terms.sdf3/","title":"<code>Terms.sdf3</code>","text":"<p> pdmosses/nabl/org.metaborg.meta.lang.nabl/syntax/terms/Terms.sdf3</p> <pre><code>module terms/Terms\n\nimports \n\n  terms/Constants \n  common/Identifiers  \n  terms/Vars\n\nsorts\n\n  Pattern\n\ncontext-free syntax\n\n  Pattern = &lt;&lt;Var&gt;&gt; \n  Pattern.Int = &lt;&lt;Int&gt;&gt; \n  Pattern.Real = &lt;&lt;Real&gt;&gt; \n  Pattern.Str = &lt;&lt;String&gt;&gt; \n  Pattern.Op = &lt;&lt;Id&gt;(&lt;{Pattern \", \"}*&gt;)&gt; \n  Pattern.OpQ = &lt;&lt;String&gt;(&lt;{Pattern \", \"}*&gt;)&gt; \n  Pattern.Char = &lt;&lt;Char&gt;&gt; \n  Pattern.Tuple = &lt;(&lt;{Pattern \", \"}*&gt;)&gt; \n  Pattern.List = &lt;[&lt;{Pattern \", \"}*&gt;]&gt; \n  Pattern.ListTail = &lt;[&lt;{Pattern \", \"}*&gt; | &lt;Pattern&gt;]&gt; \n  Pattern.As = &lt;&lt;Var&gt;@&lt;Pattern&gt;&gt; \n\nsorts\n\n  Term\n\ncontext-free syntax\n\n  Term = &lt;&lt;VarRef&gt;&gt; \n  Term.Int = &lt;&lt;Int&gt;&gt; \n  Term.Real = &lt;&lt;Real&gt;&gt; \n  Term.Str = &lt;&lt;String&gt;&gt; \n  Term.Op = &lt;&lt;Id&gt;(&lt;{Term \", \"}*&gt;)&gt; \n  Term.OpQ = &lt;&lt;String&gt;(&lt;{Term \", \"}*&gt;)&gt; \n  Term.Char = &lt;&lt;Char&gt;&gt; \n  Term.Tuple = &lt;(&lt;{Term \", \"}*&gt;)&gt; \n  Term.List = &lt;[&lt;{Term \", \"}*&gt;]&gt; \n  Term.ListTail = &lt;[&lt;{Term \", \"}*&gt; | &lt;Term&gt;]&gt; \n\n</code></pre> \u00d7"},{"location":"org.metaborg.meta.lang.nabl/syntax/terms/Terms.sdf3/#modal-h2","title":"Terms.sdf3","text":""},{"location":"org.metaborg.meta.lang.nabl/syntax/terms/Vars.sdf3/","title":"<code>Vars.sdf3</code>","text":"<p> pdmosses/nabl/org.metaborg.meta.lang.nabl/syntax/terms/Vars.sdf3</p> <pre><code>module terms/Vars\n\nimports \n\n  common/Identifiers  \n  terms/Terms\n\nsorts\n\n  Wld Var VarRef\n\ncontext-free syntax\n\n  Wld.Wld = &lt;_&gt; \n  Var = Wld \n  Var.Var = Id \n  Var.ListVar = LId \n  VarRef.VarRef = Id \n  VarRef.ListVarRef = LId \n\ncontext-free restrictions\n\n  Wld -/- [a-zA-Z0-9\\'\\-\\_]\n\n</code></pre> \u00d7"},{"location":"org.metaborg.meta.lang.nabl/syntax/terms/Vars.sdf3/#modal-h2","title":"Vars.sdf3","text":""},{"location":"org.metaborg.meta.lang.nabl/trans/analysis/names.nab/","title":"<code>names.nab</code>","text":"<p> pdmosses/nabl/org.metaborg.meta.lang.nabl/trans/analysis/names.nab</p> <pre><code>module analysis/names\n\nimports \n\n  syntax/-\n  syntax/core/-\n  syntax/terms/-\n\nnamespaces\n\n  Module\n  Namespace\n  Property\n  Variable\n\nbinding rules\n\n  Module(m, _): \n    defines Module m\n    scopes Namespace, Property\n\n  Import(m): \n    imports Namespace, Property from Module m\n\nbinding rules\n\n  NamespaceDef(n): \n    defines non-unique Namespace n\n\n  NamespaceRef(CurrentLanguage(), n): \n    refers to Namespace n\n\nbinding rules\n\n  PropertyDef(p, ns, t): \n    defines non-unique Property p of type (ns, t)\n\n  PropertyRef(p): \n    refers to Property p\n\nbinding rules\n\n  BindingRule(_, _, _):\n    scopes Variable\n\n  RefClausePart(_, _, _, _, _, _):\n    scopes Variable\n\n  WildcardImport(_, _, _, _, _):\n    scopes Variable\n\n  SingleImport(_, _, _, _, _, _, _, _):\n    scopes Variable\n\n  Var(x):\n    defines Variable x\n\n  ListVar(x):\n    defines Variable x\n\n  VarRef(x):\n    refers to Variable x\n\n  ListVarRef(x):\n    refers to Variable x\n\n</code></pre> \u00d7"},{"location":"org.metaborg.meta.lang.nabl/trans/analysis/names.nab/#modal-h2","title":"names.nab","text":""}]}